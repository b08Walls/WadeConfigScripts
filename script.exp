#!/usr/bin/expect -f
#
# This Expect script was generated by autoexpect on Sun Feb  9 05:56:13 2020
# Expect and autoexpect were both written by Don Libes, NIST.
#
# Note that autoexpect does not guarantee a working script.  It
# necessarily has to guess about certain things.  Two reasons a script
# might fail are:
#
# 1) timing - A surprising number of programs (rn, ksh, zsh, telnet,
# etc.) and devices discard or ignore keystrokes that arrive "too
# quickly" after prompts.  If you find your new script hanging up at
# one spot, try adding a short sleep just before the previous send.
# Setting "force_conservative" to 1 (see below) makes Expect do this
# automatically - pausing briefly before sending each character.  This
# pacifies every program I know of.  The -c flag makes the script do
# this in the first place.  The -C flag allows you to define a
# character to toggle this mode off and on.

set force_conservative 0  ;# set to 1 to force conservative mode even if
			  ;# script wasn't run conservatively originally
if {$force_conservative} {
	set send_slow {1 .1}
	proc send {ignore arg} {
		sleep .1
		exp_send -s -- $arg
	}
}

#
# 2) differing output - Some programs produce different output each time
# they run.  The "date" command is an obvious example.  Another is
# ftp, if it produces throughput statistics at the end of a file
# transfer.  If this causes a problem, delete these patterns or replace
# them with wildcards.  An alternative is to use the -p flag (for
# "prompt") which makes Expect only look for the last line of output
# (i.e., the prompt).  The -P flag allows you to define a character to
# toggle this mode off and on.
#
# Read the man page for more info.
#
# -Don


set timeout -1
spawn amplify init
match_max 100000
expect -exact "\[33mNote: It is recommended to run this command from the root of your app directory\[39m\r
\[32m?\[39m \[1mEnter a name for the project\[22m\[0m \[0m\[2m(demo) \[22m\[38D\[38C"
send -- "\r"
expect -exact "\[2K\[G\[32m?\[39m \[1mEnter a name for the project\[22m\[0m \[0m\[36mdemo\[39m\[35D\[35C\r
\[32m?\[39m \[1mEnter a name for the environment\[22m\[0m \[0m\[35D\[35C"
send -- "d"
expect -exact "\[2K\[G\[32m?\[39m \[1mEnter a name for the environment\[22m\[0m \[0md\[36D\[36C"
send -- "e"
expect -exact "\[2K\[G\[32m?\[39m \[1mEnter a name for the environment\[22m\[0m \[0mde\[37D\[37C"
send -- "m"
expect -exact "\[2K\[G\[32m?\[39m \[1mEnter a name for the environment\[22m\[0m \[0mdem\[38D\[38C"
send -- "o"
expect -exact "\[2K\[G\[32m?\[39m \[1mEnter a name for the environment\[22m\[0m \[0mdemo\[39D\[39C"
send -- "e"
expect -exact "\[2K\[G\[32m?\[39m \[1mEnter a name for the environment\[22m\[0m \[0mdemoe\[40D\[40C"
send -- "n"
expect -exact "\[2K\[G\[32m?\[39m \[1mEnter a name for the environment\[22m\[0m \[0mdemoen\[41D\[41C"
send -- "v"
expect -exact "\[2K\[G\[32m?\[39m \[1mEnter a name for the environment\[22m\[0m \[0mdemoenv\[42D\[42C"
send -- "\r"
expect -exact "\[2K\[G\[32m?\[39m \[1mEnter a name for the environment\[22m\[0m \[0m\[36mdemoenv\[39m\[42D\[42C\r
\[?25l\[32m?\[39m \[1mChoose your default editor:\[22m\[0m \[0m\[2m(Use arrow keys)\[22m\r
\[36m‚ùØ Visual Studio Code\[39m \r
  Atom Editor \r
  Sublime Text \r
  IntelliJ IDEA \r
  Vim (via Terminal, Mac OS only) \r
  Emacs (via Terminal, Mac OS only) \r
  None \[7D\[7C"
send -- "\r"
expect -exact "\[2K\[1A\[2K\[1A\[2K\[1A\[2K\[1A\[2K\[1A\[2K\[1A\[2K\[1A\[2K\[G\[32m?\[39m \[1mChoose your default editor:\[22m\[0m \[0m\[36mVisual Studio Code\[39m\[48D\[48C\r
\[?25h\[?25l\[32m?\[39m \[1mChoose the type of app that you're building\[22m\[0m \[0m\[2m(Use arrow keys)\[22m\r
  android \r
  ios \r
\[36m‚ùØ javascript\[39m \[13D\[13C"
send -- "\r"
expect -exact "\[2K\[1A\[2K\[1A\[2K\[1A\[2K\[G\[32m?\[39m \[1mChoose the type of app that you're building\[22m\[0m \[0m\[36mjavascript\[39m\[56D\[56C\r
\[?25h\[0mPlease tell us about your project\[0m\r
\[?25l\[32m?\[39m \[1mWhat javascript framework are you using\[22m\[0m \[0m\[2m(Use arrow keys)\[22m\r
  angular \r
  ember \r
  ionic \r
\[36m‚ùØ react\[39m \r
  react-native \r
  vue \r
  none \[7D\[7C"
send -- "\r"
expect -exact "\[2K\[1A\[2K\[1A\[2K\[1A\[2K\[1A\[2K\[1A\[2K\[1A\[2K\[1A\[2K\[G\[32m?\[39m \[1mWhat javascript framework are you using\[22m\[0m \[0m\[36mreact\[39m\[47D\[47C\r
\[?25h\[32m?\[39m \[1mSource Directory Path: \[22m\[0m \[0m\[2m(src) \[22m\[32D\[32C"
send -- "\r"
expect -exact "\[2K\[G\[32m?\[39m \[1mSource Directory Path: \[22m\[0m \[0m\[36msrc\[39m\[29D\[29C\r
\[32m?\[39m \[1mDistribution Directory Path:\[22m\[0m \[0m\[2m(build) \[22m\[39D\[39C"
send -- "\r"
expect -exact "\[2K\[G\[32m?\[39m \[1mDistribution Directory Path:\[22m\[0m \[0m\[36mbuild\[39m\[36D\[36C\r
\[32m?\[39m \[1mBuild Command: \[22m\[0m \[0m\[2m(npm run-script build) \[22m\[41D\[41C"
send -- "\r"
expect -exact "\[2K\[G\[32m?\[39m \[1mBuild Command: \[22m\[0m \[0m\[36mnpm run-script build\[39m\[38D\[38C\r
\[32m?\[39m \[1mStart Command:\[22m\[0m \[0m\[2m(npm run-script start) \[22m\[40D\[40C"
send -- "\r"
expect -exact "\[2K\[G\[32m?\[39m \[1mStart Command:\[22m\[0m \[0m\[36mnpm run-script start\[39m\[37D\[37C\r
\[0mUsing default provider  awscloudformation\[0m\r
\r
\[0mFor more information on AWS Profiles, see:\[0m\r
\[0m\[32mhttps://docs.aws.amazon.com/cli/latest/userguide/cli-multiple-profiles.html\[39m\[0m\r
\r
\[32m?\[39m \[1mDo you want to use an AWS profile?\[22m\[0m \[0m\[2m(Y/n) \[22m\[43D\[43C"
send -- "y"
expect -exact "\[2K\[G\[32m?\[39m \[1mDo you want to use an AWS profile?\[22m\[0m \[0m\[2m(Y/n) \[22my\[44D\[44C"
send -- "\r"
expect -exact "\[2K\[G\[32m?\[39m \[1mDo you want to use an AWS profile?\[22m\[0m \[0m\[36mYes\[39m\[40D\[40C\r
\[?25l\[32m?\[39m \[1mPlease choose the profile you want to use\[22m\[0m \[0m\[2m(Use arrow keys)\[22m\r
\[36m‚ùØ default\[39m \[10D\[10C"
send -- "\r"
expect eof
